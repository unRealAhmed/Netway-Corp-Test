openapi: 3.0.0
info:
    title: Auth API
    description: API for authentication (signup, login, logout, refresh-token)
    version: 1.0.0
    contact:
        name: NetWay Corp Mongodb Version
        email: ahmed.sayed.connect@gmail.com

tags:
    - name: Authentication
      description: Endpoints related to user authentication

paths:
    /api/auth/signup:
        post:
            tags:
                - Authentication
            summary: Register a new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                fullname:
                                    type: string
                                    minLength: 3
                                    maxLength: 50
                                    example: 'Ahmed Sayed'
                                email:
                                    type: string
                                    format: email
                                    example: 'ahmed.sayed.connect@gmail.com'
                                password:
                                    type: string
                                    format: password
                                    minLength: 6
                                    example: 'Ahmed Sayed Password'
                                role:
                                    type: string
                                    enum: [admin, user]
                                    example: 'admin'
                            required:
                                - fullname
                                - email
                                - password
                                - role
            responses:
                201:
                    description: User successfully registered
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                400:
                    description: Invalid input

    /api/auth/login:
        post:
            tags:
                - Authentication
            summary: Log in a user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: 'ahmed.sayed.connect@gmail.com'
                                password:
                                    type: string
                                    format: password
                                    example: 'Ahmed Sayed Password'
                            required:
                                - email
                                - password
            responses:
                200:
                    description: Successfully logged in
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    token:
                                        type: string
                                        example: 'eyJhbGciOiJIUzI1NiIsIn...'
                401:
                    description: Unauthorized

    /api/auth/logout:
        post:
            tags:
                - Authentication
            summary: Log out a user
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Successfully logged out
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    message:
                                        type: string
                                        example: 'Successfully logged out'
                401:
                    description: Unauthorized - User not logged in

    /api/auth/refresh-token:
        post:
            tags:
                - Authentication
            summary: Refresh JWT token
            responses:
                200:
                    description: Token refreshed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    token:
                                        type: string
                                        example: 'new.jwt.token.here'
                401:
                    description: Unauthorized

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    schemas:
        UserResponse:
            type: object
            properties:
                id:
                    type: string
                    example: '3b12f1df9f4294b507dd6cc'
                fullname:
                    type: string
                    example: 'Ahmed Sayed'
                email:
                    type: string
                    format: email
                    example: 'ahmed.sayed.connect@gmail.com'
                role:
                    type: string
                    enum: [admin, user]
                    example: user
